<!DOCTYPE html>
<html>
<head>
<meta http-equiv="content-type" content="text-html; charset=utf-8"/>
<script type="text/javascript" src="../JSC/jquery-latest.min.js"></script>
<script type="text/javascript" src="../JSC/JSCharting.js"></script>



		<title>JSCharting  Export Prog Chart</title>
		  <style type="text/css">/*CSS*/</style>
	</head>
	<body>
	<div id="cc" style="width: 640px; height: 400px"></div>
<select id="imgFormat"  style="width:220px;">
    <option >image/png</option>
    <option >image/jpeg</option>
    <option >application/pdf</option>
    <option >image/svg+xml</option>
</select>

<input id="btn" type="button" value="Export Image" onclick="exportImg();"/>
<input id="btn" type="button" value="Print Chart" onclick="printChart();"/>
	
<script type="text/javascript">
/*
Demonstrates how to export or print a chart programmatically.
Learn how to:

  - Export a chart programmatically.
  - Print a chart programmatically.
*/
// JS
var chart = new JSC.Chart({
  targetElement: 'cc',
  yAxisLabelText: 'Units Sold',
  xAxisLabelText: 'Quarters',
  titleLabelText: ' Acme Tool Sales ',
  series: [
    {
      name: 'Saw',
      id: 's1',
      points: [
        [ 'Q1', 230  ],
        [ 'Q2', 240  ],
        [ 'Q3', 267  ],
        [ 'Q4', 238  ]
      ]
    },
    {
      name: 'Hammer',
      points: [
        [ 'Q1', 325  ],
        [ 'Q2', 347  ],
        [ 'Q3', 392  ],
        [ 'Q4', 371  ]
      ]
    },
    {
      name: 'Grinder',
      points: [
        [ 'Q1', 285  ],
        [ 'Q2', 292  ],
        [ 'Q3', 327  ],
        [ 'Q4', 158  ]
      ]
    },
    {
      name: 'Drill',
      points: [
        [ 'Q1', 185  ],
        [ 'Q2', 192  ],
        [ 'Q3', 198  ],
        [ 'Q4', 318  ]
      ]
    }
  ]
});
function exportImg(){
	if(chart){

		chart.exportImage({imageType:$("#imgFormat option:selected").text()  });
	}
}
function printChart(){if(chart){chart.print();}}


</script>
	</body>
</html>